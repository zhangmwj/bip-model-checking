[comment encoding = UTF-8 /]
[module connector('http://bip2/1.0')/]
[import ujf::verimag::bip::backend::acceleo::templates::expressions /]

[query public relatedConnectors(anAtomInstance: AtomInstance, aSetOfConnectors: OrderedSet(ConnectorInstance)) : Set(ConnectorInstance) =
    aSetOfConnectors->select(e:ConnectorInstance | e.getConnectedAtomInstance()->includes(anAtomInstance))
/]

[query public eventSize(aConnectorInstance : ConnectorInstance) : Integer =
    aConnectorInstance.portParamInstances->first().declaration.portType.dataParameterDeclarations->size()
/]

[query public getConnectedAtomInstance(aConnectorInstance : ConnectorInstance) : Set(AtomInstance) =
    aConnectorInstance.portParamInstances->collect(e:PortInstance| e.oclAsType(ExportedPortInstance).eContainer().oclAsType(AtomInstance))->asSet()
/]

[query public getConnectedEPort(aConnectorInstance : ConnectorInstance, anAtomInstance : AtomInstance) : ExportedPortInstance =
    aConnectorInstance.portParamInstances->select(p:PortInstance |
        p.eContainer() = anAtomInstance)->first()
/]

[query public getUnderlyingIPort(aConnectorInstance : ConnectorInstance, anAtomInstance : AtomInstance) : AtomInternalPortInstance =
    getConnectedEPort(aConnectorInstance, anAtomInstance).referencedPorts->first().oclAsType(AtomInternalPortInstance)
/]

[query public getConnectorFromEPort(aCompoundInstance: CompoundInstance, anEPortInstance: ExportedPortInstance) : ConnectorInstance =
    aCompoundInstance.subConnectorInstances->select(ci : ConnectorInstance |
        ci.portParamInstances->includes(anEPortInstance))->first()
/]

[template public eventNameFromConnector(aConnectorInstance : ConnectorInstance) post(trim())]
[aConnectorInstance.declaration.name /]Evt
[/template]

[template public dataNameFromConnector(aConnectorInstance : ConnectorInstance) post(trim())]
[aConnectorInstance.declaration.name /]Evt_data
[/template]
