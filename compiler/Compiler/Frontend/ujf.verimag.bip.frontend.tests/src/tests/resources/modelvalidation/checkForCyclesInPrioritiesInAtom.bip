package checkForCyclesInPrioritiesInAtom
  port type Port_t()

  atom type FirstCycle()
     export port Port_t p1(), p2()
     place S1
     initial to S1
     on p1 from S1 to S1

     // BAD simple cycle p1 < p2 < p1
     priority prio1 p1 < p2
     priority prio2 p2 < p1
  end

  atom type SecondCycle()
     export port Port_t p1(), p2(), p3()
     place S1
     initial to S1
     on p1 from S1 to S1

     // BAD more complex cycle: p1 < p2 < p3 < p1
     priority prio1 p1 < p2
     priority prio2 p2 < p3
     priority prio3 p3 < p1
  end

  atom type ThirdCycle()
     export port Port_t p1(), p2(), p3()
     place S1
     initial to S1
     on p1 from S1 to S1

     // BAD more complex cycle p1 < p2 < p3 < *(p1)
     priority prio1 p1 < p2 
     priority prio2 p2 < p3
     priority prio3 p3 < *
  end

  atom type Cycle4()
     export port Port_t p1(), p2(), p3()
     place S1
     initial to S1
     on p1 from S1 to S1

     // BAD more complex cycle p2 < p3(*) < p2
     priority prio1 p1 < p2
     priority prio2 p2 < p3
     priority prio3 * < p2
  end

  atom type NoCycle1()
     export port Port_t p1(), p2(), p3()
     place S1
     initial to S1
     on p1 from S1 to S1

     // this should be ok
     priority prio1 p1 < p2
     priority prio3 * < p2
  end

  atom type NoCycle2()
     export port Port_t p1()
     place S1
     initial to S1
     on p1 from S1 to S1

     // this should be ok too
     priority prio1 p1 < *
     priority prio2 * < p1
  end
  
  atom type Cycle5()
     export port Port_t p1(), p2()
     place S1
     initial to S1
     on p1 from S1 to S1

     // this should be not ok!
     priority prio1 p1 < *
     priority prio2 * < p1
  end

end